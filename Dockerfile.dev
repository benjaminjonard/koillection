FROM ubuntu:noble

ARG DEBIAN_FRONTEND=noninteractive

# Environment variables
ENV APP_ENV='dev'
ENV PUID='1001'
ENV PGID='1001'
ENV USER='koillection'

COPY ./docker/entrypoint-dev.sh /entrypoint.sh

# Install some basics dependencies
RUN apt-get update && \
    apt-get install -y curl lsb-release software-properties-common gnupg2 vim && \
# Add User and Groups
    addgroup --gid "$PGID" "$USER" && \
    adduser --gecos '' --no-create-home --disabled-password --uid "$PUID" --gid "$PGID" "$USER" && \
# PHP
    add-apt-repository ppa:ondrej/php && \
# Nodejs
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg && \
    NODE_MAJOR=21 && \
    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list && \
# Install packages
    apt-get update && \
    apt-get install -y \
    ca-certificates \
    apt-transport-https \
    git \
    unzip \
    nginx-light \
    openssl \
    php8.3 \
    php8.3-apcu \
    php8.3-curl \
    php8.3-pgsql \
    php8.3-mysql \
    php8.3-mbstring \
    php8.3-gd \
    php8.3-xml \
    php8.3-zip \
    php8.3-fpm \
    php8.3-intl \
    nodejs && \
    corepack enable && \
#Install composer dependencies
    curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && \
# Set permissions
    chmod +x /entrypoint.sh && \
    mkdir /run/php

# Add nginx and PHP config files
COPY ./docker/default.conf /etc/nginx/nginx.conf

EXPOSE 80

WORKDIR /var/www/koillection

VOLUME /uploads

HEALTHCHECK CMD curl --fail http://localhost:80/ || exit 1

ENTRYPOINT ["sh", "/entrypoint.sh" ]

CMD [ "nginx" ]
